using System;

namespace ProjectEulerCS {
  class Problem44 {
    // Find the smallest pair of pentagonal numbers whose sum and difference is pentagonal.
    // 
    // Pentagonal numbers are generated by the formula, P(n)=n(3n−1)/2. The first ten pentagonal numbers are:
    // 
    // 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
    // 
    // It can be seen that P(4) + P(7) = 22 + 70 = 92 = P(8). However, their difference, 70 − 22 = 48, is not
    // pentagonal.
    // 
    // Find the pair of pentagonal numbers, P(j) and P(k), for which their sum and difference is pentagonal and
    // D = |P(k) − P(j)| is minimised; what is the value of D?


    // From http://www.mathblog.dk/project-euler-44-smallest-pair-pentagonal-numbers/:

    private static int P(int n) {
      return n*(3*n-1)/2;
    }

    private static bool isPentagonal(int n) {
      double t = (Math.Sqrt(1 + 24*n) + 1.0) / 6.0;
      return t == ((int)t);
    }

    private static int getAnswer() {
      int result = 0;
      bool notFound = true;
      int i = 1;

      while (notFound) {
        i++;
        int n = P(i);

        for (int j=i-1; j>0; j--) {
          int m = P(j);
          if (isPentagonal(n-m) && isPentagonal(n+m)) {
            result = n-m;
            notFound = false;
            break;
          }
        }
      }

      return result; // 5482660.
    }

    public static int Answer {
      get { return getAnswer(); }
    }
  }
}
